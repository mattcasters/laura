<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>Metadata detector - Parser</name>
    <name_sync_with_filename>N</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <pipeline_status>0</pipeline_status>
    <parameters>
      <parameter>
        <name>DELIMITER</name>
        <default_value>;</default_value>
        <description>The delimiter</description>
      </parameter>
      <parameter>
        <name>FILENAME</name>
        <default_value>${PROJECT_NAME}/input/customers.csv</default_value>
        <description>The filename to analyze</description>
      </parameter>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2013/09/23 23:14:56.200</created_date>
    <modified_user>-</modified_user>
    <modified_date>2013/09/23 23:14:56.200</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>CSV file input</from>
      <to>evaluate values</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>evaluate values</from>
      <to>get result rows</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>get result rows</from>
      <to>select result fields</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>CSV file input</name>
    <type>CSVInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <filename>${FILENAME}</filename>
    <filename_field/>
    <rownum_field/>
    <include_filename>N</include_filename>
    <separator>${DELIMITER}</separator>
    <enclosure/>
    <header>Y</header>
    <buffer_size>50000</buffer_size>
    <lazy_conversion>N</lazy_conversion>
    <add_filename_result>N</add_filename_result>
    <parallel>N</parallel>
    <newline_possible>N</newline_possible>
    <encoding/>
    <fields>
    </fields>
    <attributes/>
    <GUI>
      <xloc>176</xloc>
      <yloc>112</yloc>
    </GUI>
  </transform>
  <transform>
    <name>evaluate values</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Evaluations</jsScript_name>
        <jsScript_script>
for (i=0;i&lt;getInputRowMeta().size();i++) {
  var stringValue = getInputRowMeta().getString(row, i);
  var evaluator = evaluators.get(i);
  evaluator.evaluateString(stringValue);
}
</jsScript_script>
      </jsScript>
      <jsScript>
        <jsScript_type>2</jsScript_type>
        <jsScript_name>EndScript</jsScript_name>
        <jsScript_script>// write the results as new rows

for (i=0;i&lt;getInputRowMeta().size();i++) {
  var stringValue = getInputRowMeta().getString(row, i);
  var evaluator = evaluators.get(i);
  evaluator.evaluateString(stringValue);

  var evalResult = evaluator.getAdvicedResult();
  var valueMeta = evalResult.getConversionMeta();

  var newRow = createRowCopy(getOutputRowMeta().size());
  var rowIndex = getInputRowMeta().size();
  
  newRow[rowIndex++] = getInputRowMeta().getValueMeta(i).getName();
  newRow[rowIndex++] = valueMeta.getTypeDesc();
  newRow[rowIndex++] = java.lang.Integer.toString(valueMeta.getLength());
  newRow[rowIndex++] = java.lang.Integer.toString(valueMeta.getPrecision());
  newRow[rowIndex++] = valueMeta.getConversionMask();
  newRow[rowIndex++] = valueMeta.getDecimalSymbol();
  newRow[rowIndex++] = valueMeta.getGroupingSymbol();
	
  putRow(newRow);
}</jsScript_script>
      </jsScript>
      <jsScript>
        <jsScript_type>1</jsScript_type>
        <jsScript_name>StartScript</jsScript_name>
        <jsScript_script>var evaluators;
var field=null;
var fieldType=null;
var fieldLength=null;
var fieldPrecision=null;
var fieldConversionMask=null;
var fieldDecimal=null;
var fieldGroup=null;

if (evaluators==null) {
  evaluators = new java.util.ArrayList();
  for (i=0;i&lt;getInputRowMeta().size();i++) {
	var evaluator = new org.apache.hop.core.util.StringEvaluator(true);
    evaluators.add(evaluator);    
  }
}
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>field</name>
        <rename>field</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>fieldType</name>
        <rename>fieldType</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>fieldLength</name>
        <rename>fieldLength</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>fieldPrecision</name>
        <rename>fieldPrecision</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>fieldConversionMask</name>
        <rename>fieldConversionMask</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>fieldDecimal</name>
        <rename>fieldDecimal</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>fieldGroup</name>
        <rename>fieldGroup</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <GUI>
      <xloc>320</xloc>
      <yloc>112</yloc>
    </GUI>
  </transform>
  <transform>
    <name>get result rows</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to/>
    <send_false_to/>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>field</leftvalue>
        <function>IS NOT NULL</function>
        <rightvalue/>
        <value>
          <name>constant</name>
          <type>String</type>
          <text>id</text>
          <length>-1</length>
          <precision>-1</precision>
          <isnull>N</isnull>
          <mask/>
        </value>
      </condition>
    </compare>
    <attributes/>
    <GUI>
      <xloc>480</xloc>
      <yloc>112</yloc>
    </GUI>
  </transform>
  <transform>
    <name>select result fields</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>field</name>
      </field>
      <field>
        <name>fieldType</name>
      </field>
      <field>
        <name>fieldLength</name>
      </field>
      <field>
        <name>fieldPrecision</name>
      </field>
      <field>
        <name>fieldConversionMask</name>
      </field>
      <field>
        <name>fieldDecimal</name>
      </field>
      <field>
        <name>fieldGroup</name>
      </field>
      <select_unspecified>N</select_unspecified>
    </fields>
    <attributes/>
    <GUI>
      <xloc>656</xloc>
      <yloc>112</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes>
    <group>
      <name>DataService</name>
    </group>
  </attributes>
</pipeline>
